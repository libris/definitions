##
# To run tests:
#
#   $ pip install -r requirements.txt
#   $ python test_categories.py
#
# (Add `-d` cmdline flag see full OWL-RL output.)

prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix owl: <http://www.w3.org/2002/07/owl#>
prefix : <https://id.kb.se/vocab/>
prefix kbrda: <https://id.kb.se/term/rda/>
prefix saogf: <https://id.kb.se/term/saogf/>
prefix barngf: <https://id.kb.se/term/barngf/>
prefix spec: <https://libris.kb.se/sys/spec/>

<book01> a :Text ;
  :genreForm saogf:Romaner ;
  spec:query 'ASK { <book01> a :WrittenBook }' ,
    'ASK { <book01> :contentType kbrda:Text }' .

<book02> a :Audio ;
  :genreForm saogf:Romaner ;
  spec:query 'ASK { <book02> a :Audiobook }' .

<book03> a :Audio ;
  :genreForm saogf:Ljudb\%C3\%B6cker ;
  spec:query 'ASK { <book03> a :Audiobook }' .

# TODO: :BrailleVolume :instanceOf [a :WrittenBook ] .
#<braillebook01> a :WrittenBook ;
#  :genreForm saogf:Punktskriftsb%C3%B6cker ;
#  spec:query 'ASK { <book03> a :TactileBook }' .
#
#<tactilefeltbook01> a :InteractiveObject ; :genreForm kbgf:TactileBook ;
#  spec:query 'ASK { <tactilefeltbook01> a :TactileBook }' .

<ebook01> a :Electronic ;
  :instanceOf <book01> ;
  spec:query 'ASK { <ebook01> a :EBook }' .

<cdbook01> a :Electronic ;
  :carrierType kbrda:AudioDisc ;
  :instanceOf <book01> ;
  spec:query 'ASK { <cdbook01> a :CDBook }' .

<computergame01> a :Multimedia ;
  :genreForm saogf:Datorspel ;
  spec:query 'ASK { <computergame01> a :ComputerGame }' .

<computergame02> a :ComputerGame ;
  spec:query 'ASK { <computergame02> a :Multimedia ; :genreForm saogf:Datorspel }' .

<multimedia01> a :Multimedia ;
  spec:query 'ASK { FILTER NOT EXISTS { <multimedia01> a :ComputerGame } }' .

<serial01> a :Serial ;
  :genreForm saogf:Datorspel ;
  spec:query 'ASK { FILTER NOT EXISTS { <serial01> a :ComputerGame } }' .

<comicmagazine01> a :Text ;
  :genreForm saogf:Tecknade%20serier ;
  spec:query 'ASK { <comicmagazine01> a :Comic }' .

<comicmagazine02> a :Text ;
  :genreForm barngf:Tecknade%20serier ;
  spec:query 'ASK { <comicmagazine02> a :Comic }' ,
    'ASK { <comicmagazine02> :contentType kbrda:StillImage }' .

<comicmagazine03> a :ComicIssue ;
  spec:query 'ASK { <comicmagazine03> a :Text ; :contentType kbrda:StillImage }' .
  #'ASK { FILTER NOT EXISTS { <comicmagazine03> :genreForm ?gf } }' .

<comicmagazine04> a :ComicIssue ;
  spec:query 'ASK { <comicmagazine04> :contentType kbrda:StillImage }' .

<serial02> a :Serial ;
  :genreForm saogf:Tecknade%20serier ;
  spec:query 'ASK { FILTER NOT EXISTS { <serial02> a :Comic } }' .

<graphicnovel01> a :Text ;
  :genreForm saogf:Serieromaner ;
  spec:query 'ASK { <graphicnovel01> a :GraphicNovel }' ,
    'ASK { <graphicnovel01> a :Book }' .

<graphicnovel02> a :GraphicNovel ;
  spec:query 'ASK { <graphicnovel02> a :Text ; :genreForm saogf:Serieromaner }' ,
    'ASK { <graphicnovel02> :genreForm saogf:Romaner }' ,
    'ASK { <graphicnovel02> a :Book }' .
